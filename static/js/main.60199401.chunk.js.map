{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","currentPage","onPageChange","arrOfPages","className","classNames","disabled","href","onClick","map","num","active","length","items","App","totalItems","useState","setCurrentPage","perPage","setPerPage","startItem","endItem","visibleItems","slice","pageCount","Math","ceil","id","onChange","e","target","value","htmlFor","total","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACAC,EACI,EADJA,WAcA,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YAAa,CAAEC,SAA0B,IAAhBL,IAD3B,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBN,GAAqB,OACpCO,QAjBiB,WACnBP,EAAc,GAChBC,EAAaD,EAAc,IAUzB,oBAUDE,EAAWM,KAAI,SAAAC,GAAG,OACjB,oBACEN,UAAWC,IACT,YAAa,CAAEM,OAAQD,IAAQT,IAFnC,SAME,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACPN,EAAaQ,IALjB,SAQGA,KAVEA,MAcT,oBAAIN,UAAWC,IACb,YAAa,CAAEC,SAAUL,IAAgBE,EAAWS,SADtD,SAIE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeN,IAAgBE,EAAWS,QAAU,OACpDJ,QAxDkB,WACpBP,EAAcE,EAAWA,EAAWS,OAAS,IAC/CV,EAAaD,EAAc,IAiDzB,wBC5DFY,EAAQnB,EAAW,EAAG,IACzBe,KAAI,SAAAX,GAAC,qBAAYA,MAEPgB,EAAgB,WAC3B,IAAMC,EAAaF,EAAMD,OACzB,EAAsCI,mBAAS,GAA/C,mBAAOf,EAAP,KAAoBgB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACMC,EAAYF,EAAUjB,EAAciB,EAAU,EAC9CG,EACJD,EAAYF,EAAU,EAAIH,EACxBA,EACAK,EAAYF,EAAU,EACpBI,EAAeT,EAAMU,MAAMH,EAAY,EAAGC,GAC1CG,EAAY9B,EAAW,EAAG+B,KAAKC,KAAKX,EAAaG,IAAUT,KAAI,SAAAX,GAAC,OAAIA,KAW1E,OACE,sBAAKM,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,yBACWH,EADX,yBAGYmB,EAHZ,cAG2BC,EAH3B,eAGyCN,GAHzC,OAOA,sBAAKX,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,SA1BY,SACpBC,IAEKA,EAAEC,OAAOC,QAAUb,IACtBC,GAAYU,EAAEC,OAAOC,OACrBd,EAAe,KAsBTc,MAAOb,EALT,UAOE,wBAAQa,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACE6B,MAAOlB,EACPG,QAASA,EACTjB,YAAaA,EACbC,aAAce,EACdd,WAAYqB,IAEd,6BACGF,EAAab,KAAI,SAAAyB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCnElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.60199401.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number\n  currentPage: number\n  onPageChange: (page: number) => void,\n  arrOfPages: number[],\n};\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  onPageChange,\n  arrOfPages,\n}) => {\n  const rightArrowHandler = () => {\n    if (currentPage < arrOfPages[arrOfPages.length - 1]) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const leftArrowHandler = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item', { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 && 'true'}\n          onClick={leftArrowHandler}\n        >\n          «\n        </a>\n      </li>\n      {arrOfPages.map(num => (\n        <li\n          className={classNames(\n            'page-item', { active: num === currentPage },\n          )}\n          key={num}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${num}`}\n            onClick={() => {\n              onPageChange(num);\n            }}\n          >\n            {num}\n          </a>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item', { disabled: currentPage === arrOfPages.length },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === arrOfPages.length && 'true'}\n          onClick={rightArrowHandler}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const totalItems = items.length;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const startItem = perPage * currentPage - perPage + 1;\n  const endItem\n  = startItem + perPage - 1 > totalItems\n    ? totalItems\n    : startItem + perPage - 1;\n  const visibleItems = items.slice(startItem - 1, endItem);\n  const pageCount = getNumbers(1, Math.ceil(totalItems / perPage)).map(n => n);\n\n  const selectHandler = (\n    e: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    if (+e.target.value !== perPage) {\n      setPerPage(+e.target.value);\n      setCurrentPage(1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} `}\n        (\n        {`items ${startItem} - ${endItem} of ${totalItems}`}\n        )\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={selectHandler}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n        arrOfPages={pageCount}\n      />\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}